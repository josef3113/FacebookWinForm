<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCADaAUADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDi4VSGMJGoVQMACmySD1qgt4Mdaa13mv1k+RJ5pB2P61TkYluu
        KRp/xqNjv6Uh3G7mZsZP50/cff8AOmr8wxTqVkTdjlLdCaXc1Jt/GnqKLIdxPxqQZHfim7QuKev0osg5
        mLu6f407cR7mjbTl44xmiyFdhk06hV79qcBiiyC7D5h3zRz609RS7cU7BdibaFz6U/6807aRzTsguxm2
        jmnFcUqrTsguxv3ev8hTfwqQL2pP4qLILsjpG59vwqUimstFkF2R4454pPoKeRketJt9am1guyIqfSmc
        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
        PzH86AP/2Q==
</value>
  </data>
</root>